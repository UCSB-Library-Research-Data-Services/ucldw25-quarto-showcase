---
title: "A simple Quarto Website... with cats!"
---

This is a Quarto website.


## Quarto workflow

![](img/quarto_schematic.png)

## Structure of a Quarto document

![](img/quarto_doc_structure.png){fig-align="center"}

### 3 basic components:

- Metadata
    (YAML Ain't Markup Language)

- Text for documentation
    (markdown + other few tricks)
    
- Code (chunks) with your analysis (R and friends)



## Let's load our R libraries

As with any other R script, it is good practice to start by loading the libraries you are going to need for your analysis.

```{r}
library(httr2)
library(knitr)
library(tidyverse)
library(lterdatasampler)
```

Mmm this is a lot of information we would like to hide...


### Take two

Adding an execution option: `#| warning: false` to the code chunk will let us hide the warning messages when rendering the document


```{r}
#| warning: false

library(httr2)
library(knitr)

```

Yeah!!!


## Now we can start coding!

Did somebody says cat?? Sorry **cute** cat!!

![](img/cat_upsidedown.jpg)

### Better if we use the API so we can have new cats everytime!

```{r}
#| output.align: center
  
req <- request("https://api.thecatapi.com/v1")
resp <- req %>%
  # Then we add on the images path
  req_url_path_append("images/search") %>%
  # Add query parameters _width and _quantity
  req_url_query(`limit` = 1) %>%
  req_perform() %>%
  resp_body_json()

knitr::download_image(resp[[1]]$url)
```


### We might want to hide the code

Of course there is an option for that: `#| echo: false`

```{r}
#| echo: false

req <- request("https://api.thecatapi.com/v1")
resp <- req %>%
  # Then we add on the images path
  req_url_path_append("images/search") %>%
  # Add query parameters _width and _quantity
  req_url_query(`limit` = 1) %>%
  req_perform() %>%
  resp_body_json()

knitr::download_image(resp[[1]]$url)
```

### Or collapse it

Try `#| code-fold: true` if you want to get fancy


```{r}
#| code-fold: true

req <- request("https://api.thecatapi.com/v1")
resp <- req %>%
  # Then we add on the images path
  req_url_path_append("images/search") %>%
  # Add query parameters _width and _quantity
  req_url_query(`limit` = 1) %>%
  req_perform() %>%
  resp_body_json()

knitr::download_image(resp[[1]]$url)
```

## I am sold, next steps?

![](https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExaThpNzlrd3pxNjJydTE4MnBnNjE2ZTQ4ZDdkbTNzeGltNmtxcmNjNCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/L40sNfcoJs5Op5afQU/giphy.gif)

<br>

- Creating a Quarto website: <https://quarto.org/docs/websites/>
- Quarto website video series: <https://quarto.org/docs/blog/posts/2024-12-04-websites-workshop/>
- Sam's tutorial: <https://ucsb-meds.github.io/creating-quarto-websites/>
- Another tutorial from the [LTER](https://lternet.edu/) team: <https://lter.github.io/scicomp/tutorial_quarto-website.html>
